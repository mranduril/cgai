uniform float iTime;
uniform vec2 iResolution;

//======================================================= Copy-Paste Area Begin =========================================================
// // Number of Gaussians
// const int NUM_GAUSSIANS = 2;
// // Dimensions [x_min, x_max, y_min, y_max]
// float dim[4] = float[4](-5.0,5.0,-5.0,5.0);
// // Centers (x, y coordinates)
// vec2 gauss_centers[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(-3.00, 1.50),vec2(1.50, 2.50));
// // Sigmas (scales)
// vec2 gauss_sigmas[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(2.00, 1.50),vec2(1.50, 0.50));
// // Rotation angles (thetas)
// float gauss_thetas[NUM_GAUSSIANS] = float[NUM_GAUSSIANS](0.20,0.80);
// // Colors (RGB)
// vec3 gauss_colors[NUM_GAUSSIANS] = vec3[NUM_GAUSSIANS](vec3(0.70, 0.10, 0.20),vec3(0.30, 0.80, 0.10));

// const int NUM_GAUSSIANS = 2;
// // Dimensions [x_min, x_max, y_min, y_max]
// float dim[4] = float[4](-5.0,5.0,-5.0,5.0);
// // Centers (x, y coordinates)
// vec2 gauss_centers[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(-3.00, 0.50),vec2(1.50, -0.50));
// // Sigmas (scales)
// vec2 gauss_sigmas[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(2.00, -3.50),vec2(-3.40, 1.50));
// // Rotation angles (thetas)
// float gauss_thetas[NUM_GAUSSIANS] = float[NUM_GAUSSIANS](0.20,0.40);
// // Colors (RGB)
// vec3 gauss_colors[NUM_GAUSSIANS] = vec3[NUM_GAUSSIANS](vec3(0.70, 0.10, 0.20),vec3(0.30, 0.40, 0.70));

// Number of Gaussians
// const int NUM_GAUSSIANS = 200;
// // Dimensions [x_min, x_max, y_min, y_max]
// float dim[4] = float[4](-5.0,5.0,-7.552816901408451,7.552816901408451);
// // Centers (x, y coordinates)
// vec2 gauss_centers[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(-2.31, 7.08),vec2(2.19, 0.45),vec2(5.16, -0.30),vec2(0.21, 6.54),vec2(1.99, 6.65),vec2(0.45, -0.61),vec2(-4.69, -4.45),vec2(-2.49, -2.79),vec2(-0.45, -0.24),vec2(-2.60, 1.79),vec2(-3.84, -7.70),vec2(-1.88, 5.89),vec2(-3.67, 7.56),vec2(1.33, 6.41),vec2(-0.28, -2.64),vec2(1.91, -6.59),vec2(-4.44, 2.80),vec2(5.07, -5.85),vec2(-0.17, -4.54),vec2(-1.61, 0.12),vec2(1.61, 7.04),vec2(-0.24, 1.17),vec2(4.06, 4.97),vec2(-3.23, 1.15),vec2(0.50, -0.29),vec2(-2.96, -7.39),vec2(2.44, -6.94),vec2(-0.05, 6.67),vec2(1.88, 1.71),vec2(-1.14, -5.13),vec2(-1.12, 8.12),vec2(-0.55, 0.51),vec2(1.97, -4.57),vec2(-0.84, -7.56),vec2(-1.17, -4.50),vec2(-2.21, -6.23),vec2(3.20, -5.52),vec2(1.53, -5.03),vec2(3.30, -2.38),vec2(0.73, -5.22),vec2(1.32, -0.08),vec2(-2.37, 3.19),vec2(-4.16, -0.70),vec2(0.65, -5.60),vec2(-2.11, -1.37),vec2(-3.72, -4.62),vec2(-1.14, 3.59),vec2(-0.01, -0.52),vec2(-2.30, 1.18),vec2(0.50, -7.36),vec2(-0.69, 3.84),vec2(0.21, -1.84),vec2(4.62, 7.58),vec2(0.06, 2.66),vec2(2.85, 3.51),vec2(-1.86, 5.66),vec2(3.04, -3.42),vec2(-2.99, -2.49),vec2(2.84, -5.91),vec2(-0.65, 2.56),vec2(-4.75, -2.35),vec2(3.50, -6.86),vec2(-1.80, -3.77),vec2(2.79, -4.44),vec2(3.76, 3.49),vec2(-4.64, 3.66),vec2(-3.12, 5.42),vec2(5.15, -1.03),vec2(1.17, -4.68),vec2(-4.02, -6.48),vec2(-3.00, -1.00),vec2(-1.68, -3.98),vec2(2.61, -3.24),vec2(1.62, 3.05),vec2(2.79, 3.93),vec2(5.17, -5.93),vec2(1.11, 0.78),vec2(3.20, 7.66),vec2(2.40, 0.28),vec2(5.15, -2.38),vec2(3.83, 2.84),vec2(1.96, 7.29),vec2(0.89, -4.66),vec2(-4.62, 6.59),vec2(2.42, 3.82),vec2(-4.13, 4.43),vec2(-4.65, 7.94),vec2(4.52, -4.60),vec2(-0.79, -1.03),vec2(-2.34, -2.82),vec2(3.82, -6.26),vec2(-1.21, 0.08),vec2(-0.36, -5.17),vec2(-0.71, -5.34),vec2(-4.37, -1.74),vec2(-3.28, 4.74),vec2(1.75, -2.01),vec2(-3.24, -5.70),vec2(0.38, -1.71),vec2(4.63, 6.71),vec2(2.41, -3.73),vec2(-3.11, 0.08),vec2(0.87, 6.21),vec2(-1.74, 5.17),vec2(1.92, 3.83),vec2(-0.76, -2.14),vec2(3.13, 7.73),vec2(3.73, 0.75),vec2(4.81, -6.83),vec2(-2.13, 2.17),vec2(-4.39, -2.39),vec2(-2.36, 4.66),vec2(-0.28, 1.69),vec2(-0.04, 3.52),vec2(-4.81, -1.88),vec2(-1.06, 4.65),vec2(3.62, 2.36),vec2(-3.54, -3.69),vec2(-3.70, 1.55),vec2(0.42, -5.06),vec2(0.70, 1.05),vec2(-1.98, 3.98),vec2(2.14, -1.78),vec2(-1.66, -1.32),vec2(1.61, -4.58),vec2(1.84, 5.66),vec2(-1.96, -0.61),vec2(4.41, -2.74),vec2(0.42, 4.61),vec2(1.43, -0.77),vec2(4.40, 2.30),vec2(-1.41, -0.15),vec2(4.80, -0.06),vec2(1.53, 7.54),vec2(-3.13, -6.69),vec2(-3.85, 0.69),vec2(0.45, -2.55),vec2(1.59, -2.40),vec2(5.09, 5.11),vec2(2.09, 3.57),vec2(3.83, 1.53),vec2(0.13, 7.34),vec2(4.48, -2.89),vec2(0.52, 3.90),vec2(2.69, 6.55),vec2(-0.17, -2.63),vec2(0.64, -3.51),vec2(-0.42, -6.05),vec2(1.28, -3.66),vec2(0.94, 7.18),vec2(3.70, 4.14),vec2(5.22, -5.34),vec2(1.27, 7.11),vec2(-1.83, 5.45),vec2(-4.71, 1.31),vec2(-3.53, 3.07),vec2(2.53, 7.45),vec2(-1.38, -5.16),vec2(-0.15, 5.07),vec2(-0.53, 5.81),vec2(-2.23, -4.16),vec2(-0.61, -0.53),vec2(4.68, 1.63),vec2(-4.21, -3.09),vec2(-0.69, 6.29),vec2(-0.62, 4.90),vec2(4.69, 3.93),vec2(-0.86, 5.30),vec2(2.72, 5.09),vec2(-4.81, -3.04),vec2(1.86, 0.01),vec2(4.54, 0.01),vec2(0.05, 0.55),vec2(1.23, -7.01),vec2(-3.68, -3.23),vec2(0.80, -4.73),vec2(-0.32, -3.94),vec2(-4.40, 0.17),vec2(2.20, -1.38),vec2(4.53, 5.90),vec2(3.59, 5.97),vec2(-3.41, 6.66),vec2(0.14, -4.69),vec2(0.81, -7.72),vec2(1.59, 5.58),vec2(0.16, -5.52),vec2(-1.64, -2.56),vec2(2.67, 2.36),vec2(-3.11, -1.53),vec2(-2.56, 4.12),vec2(1.67, 4.54),vec2(0.41, 0.36),vec2(-1.50, 2.14),vec2(0.43, -3.97),vec2(1.64, -7.76),vec2(5.18, -4.69),vec2(-2.08, -5.41),vec2(-0.59, -2.45),vec2(-1.07, 6.78),vec2(-4.61, 5.34));
// // Sigmas (scales)
// vec2 gauss_sigmas[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(0.85, 0.69),vec2(-0.01, 0.03),vec2(0.04, 0.05),vec2(0.54, 0.25),vec2(0.00, -0.01),vec2(0.00, 0.02),vec2(0.03, -0.01),vec2(0.09, -0.00),vec2(0.40, 0.26),vec2(0.47, 0.24),vec2(0.09, 0.06),vec2(0.54, 0.53),vec2(0.88, 0.34),vec2(0.42, 0.40),vec2(-0.00, 0.01),vec2(0.03, -0.00),vec2(0.09, 0.02),vec2(0.03, 0.01),vec2(0.47, 0.13),vec2(0.15, 0.26),vec2(0.19, 0.39),vec2(0.70, 0.29),vec2(0.57, 0.46),vec2(0.17, 0.50),vec2(0.21, 0.28),vec2(0.39, 0.27),vec2(0.01, -0.00),vec2(0.00, 0.00),vec2(0.07, 0.01),vec2(1.03, 0.72),vec2(0.65, -0.40),vec2(0.44, 0.49),vec2(0.05, 0.01),vec2(0.79, 0.44),vec2(0.65, 0.28),vec2(0.77, 0.46),vec2(1.67, 1.40),vec2(0.61, 0.34),vec2(0.02, 0.00),vec2(-0.00, 0.02),vec2(0.77, 0.18),vec2(-0.01, -0.01),vec2(0.46, 0.75),vec2(0.12, 0.12),vec2(0.45, 0.55),vec2(0.04, -0.00),vec2(0.18, 0.44),vec2(0.29, 0.10),vec2(-0.00, 0.16),vec2(0.04, 0.01),vec2(0.14, 0.60),vec2(0.01, 0.05),vec2(0.84, 0.41),vec2(0.78, 0.38),vec2(0.50, 0.06),vec2(0.08, -0.01),vec2(0.00, 0.02),vec2(0.41, 0.26),vec2(0.02, -0.00),vec2(0.15, 0.31),vec2(0.24, 0.15),vec2(0.01, 0.01),vec2(0.08, 0.32),vec2(-0.00, 0.01),vec2(0.52, 0.30),vec2(0.37, 0.48),vec2(0.65, 0.55),vec2(0.02, 0.03),vec2(0.13, 0.02),vec2(1.25, 1.44),vec2(-0.03, 0.00),vec2(0.73, 0.16),vec2(0.41, 0.48),vec2(-0.01, -0.01),vec2(-0.01, -0.01),vec2(0.01, 0.06),vec2(0.63, 0.72),vec2(0.39, 0.26),vec2(0.26, 0.30),vec2(0.04, 0.09),vec2(0.35, 0.13),vec2(0.31, 0.77),vec2(0.00, 0.03),vec2(0.62, 0.67),vec2(0.47, 0.44),vec2(0.72, 0.52),vec2(0.51, 0.34),vec2(-0.01, 0.03),vec2(0.46, 0.56),vec2(0.19, 0.18),vec2(0.01, 0.01),vec2(0.29, 0.43),vec2(0.25, 0.31),vec2(0.42, 0.09),vec2(0.47, 0.22),vec2(0.58, 0.27),vec2(0.06, 0.03),vec2(0.09, 0.26),vec2(0.01, -0.00),vec2(1.00, 0.46),vec2(0.00, 0.00),vec2(0.67, 0.40),vec2(0.23, -0.07),vec2(0.16, 0.74),vec2(0.02, 0.00),vec2(0.02, -0.01),vec2(0.05, 0.01),vec2(0.32, 0.62),vec2(-0.00, -0.01),vec2(0.48, 0.69),vec2(0.69, 0.25),vec2(0.42, 0.60),vec2(0.15, 0.19),vec2(0.55, 0.43),vec2(0.05, 0.01),vec2(0.24, 0.26),vec2(0.33, 0.17),vec2(0.81, 0.62),vec2(0.30, 0.35),vec2(0.32, 0.09),vec2(0.01, 0.01),vec2(0.15, 0.36),vec2(0.04, 0.01),vec2(0.02, 0.14),vec2(0.07, 0.13),vec2(0.22, 0.62),vec2(0.28, 0.35),vec2(0.01, 0.01),vec2(0.37, 0.17),vec2(0.00, 0.02),vec2(0.42, 0.46),vec2(0.27, -0.10),vec2(0.15, 0.11),vec2(0.07, -0.01),vec2(0.03, -0.00),vec2(0.58, 0.30),vec2(0.00, 0.02),vec2(0.08, 0.16),vec2(0.51, 0.50),vec2(0.01, 0.04),vec2(0.52, 0.19),vec2(0.60, 0.48),vec2(0.68, 0.61),vec2(0.19, 0.35),vec2(0.80, 0.55),vec2(0.81, 1.00),vec2(0.04, 0.01),vec2(0.14, 0.03),vec2(0.41, 0.33),vec2(0.33, 0.55),vec2(0.40, 0.43),vec2(0.18, 0.14),vec2(0.19, 0.44),vec2(-0.02, 0.01),vec2(0.49, 0.98),vec2(0.78, 0.86),vec2(0.28, 0.37),vec2(0.00, -0.05),vec2(0.44, 0.42),vec2(-0.00, 0.02),vec2(0.25, 0.21),vec2(0.14, 0.33),vec2(0.02, 0.00),vec2(0.01, 0.01),vec2(0.38, 0.15),vec2(0.32, 0.42),vec2(0.54, 0.53),vec2(0.35, 0.17),vec2(0.65, 0.61),vec2(-0.01, 0.06),vec2(0.27, 0.05),vec2(0.55, 1.38),vec2(0.01, -0.01),vec2(0.76, 0.63),vec2(0.01, -0.02),vec2(0.09, 0.22),vec2(-0.00, 0.00),vec2(-0.03, -0.00),vec2(0.74, 0.64),vec2(0.74, 0.39),vec2(0.56, 0.55),vec2(0.53, 0.56),vec2(-0.00, 0.01),vec2(0.11, 0.09),vec2(0.60, 0.10),vec2(0.08, 0.31),vec2(0.43, 0.50),vec2(0.53, 0.69),vec2(-0.02, -0.00),vec2(0.17, -0.13),vec2(0.01, -0.00),vec2(0.43, 0.82),vec2(0.01, 0.00),vec2(0.17, 0.19),vec2(0.11, 0.11),vec2(0.18, 0.21),vec2(0.36, 0.45),vec2(0.01, -0.00),vec2(0.50, 0.57),vec2(0.75, 0.55));
// // Rotation angles (thetas)
// float gauss_thetas[NUM_GAUSSIANS] = float[NUM_GAUSSIANS](0.88,-0.03,-0.46,-0.20,-0.01,0.04,-0.79,0.40,0.12,-0.01,0.01,-0.42,0.20,0.06,0.12,-0.36,0.47,-0.20,-0.51,-0.10,0.13,0.40,-0.16,-0.36,-0.54,0.14,-0.14,0.04,-0.30,-0.66,-0.02,-0.31,-0.12,0.03,-0.34,-1.08,-0.83,0.15,0.24,0.44,0.29,-0.23,0.60,-0.38,-1.05,-0.85,0.13,-0.07,0.42,-0.03,-0.14,-0.63,0.05,0.31,-0.08,-0.01,-0.14,0.31,0.05,0.98,0.02,0.02,-1.67,0.12,0.40,-0.07,0.26,-0.11,-0.39,0.56,-0.06,-0.21,2.56,0.20,-0.07,-0.19,0.01,0.06,-1.44,0.28,0.26,0.18,-0.18,0.47,-0.29,-0.59,0.37,0.07,0.78,0.67,-0.39,-0.21,0.72,-0.65,0.09,-0.29,0.78,-0.03,-0.04,-0.15,-0.31,0.91,-0.47,-0.46,-0.03,0.01,-0.14,1.20,-0.01,-0.07,0.77,-0.20,0.52,1.37,0.79,-0.23,0.18,0.35,-0.53,-0.57,-0.04,0.33,0.74,-0.25,1.49,0.48,-0.64,-0.15,0.15,0.59,-0.26,-0.48,-0.33,-0.05,0.08,-0.78,-0.02,-0.18,0.30,0.06,-0.19,0.26,-1.88,-0.99,0.68,-2.19,-0.09,-0.00,0.15,-0.46,0.08,1.21,-0.02,-0.12,-0.06,-0.72,0.47,0.00,0.23,-0.41,0.02,1.06,0.73,-0.27,0.34,-0.62,-0.46,0.66,-0.73,0.01,0.35,-0.04,0.16,-0.37,-0.24,1.45,-0.09,0.40,0.37,0.02,0.53,-0.80,0.16,0.13,-1.00,0.78,0.80,0.40,-0.23,0.90,-0.46,-0.26,-0.31,0.46,0.53,-0.29,-0.60,0.03,-0.00,0.36);
// // Colors (RGB)
// vec3 gauss_colors[NUM_GAUSSIANS] = vec3[NUM_GAUSSIANS](vec3(0.43, 0.36, 0.15),vec3(0.21, 0.55, 0.46),vec3(0.24, 0.58, 0.34),vec3(0.49, 0.40, 0.15),vec3(0.47, 0.17, 0.54),vec3(0.36, 0.53, 0.54),vec3(0.21, 0.21, 0.56),vec3(0.19, 0.38, 0.19),vec3(0.52, 0.49, 0.21),vec3(0.21, 0.27, 0.17),vec3(0.67, 0.13, 0.23),vec3(0.44, 0.35, 0.12),vec3(0.30, 0.27, 0.12),vec3(0.33, 0.27, 0.10),vec3(0.70, 0.25, 0.48),vec3(0.11, 0.25, 0.07),vec3(0.22, 0.16, 0.27),vec3(0.37, 0.41, 0.06),vec3(0.74, 0.43, 0.08),vec3(0.43, 0.10, 0.04),vec3(0.21, 0.19, 0.09),vec3(0.49, 0.27, 0.05),vec3(0.49, 0.41, 0.14),vec3(0.23, 0.15, 0.05),vec3(0.19, 0.16, 0.08),vec3(0.05, 0.02, 0.02),vec3(0.14, 0.28, 0.48),vec3(0.31, 0.31, 0.45),vec3(0.03, 0.02, 0.21),vec3(0.30, 0.12, 0.09),vec3(0.25, 0.59, 0.39),vec3(0.78, 0.64, 0.23),vec3(0.74, 0.64, 0.34),vec3(0.09, 0.04, 0.06),vec3(0.68, 0.44, 0.05),vec3(0.07, 0.03, 0.05),vec3(0.08, 0.03, 0.04),vec3(0.33, 0.15, 0.06),vec3(0.13, 0.05, 0.33),vec3(0.09, -0.06, 0.34),vec3(0.35, 0.21, 0.03),vec3(0.38, 0.70, 0.55),vec3(0.54, 0.22, 0.09),vec3(0.06, 0.05, 0.05),vec3(0.10, 0.06, 0.06),vec3(0.62, 0.14, 0.20),vec3(1.02, 0.65, 0.21),vec3(0.33, 0.25, 0.10),vec3(0.48, 0.16, 0.03),vec3(0.66, 0.04, 0.05),vec3(0.77, 0.48, 0.15),vec3(0.12, 0.04, 0.05),vec3(0.35, 0.37, 0.18),vec3(0.30, 0.08, 0.07),vec3(0.31, 0.28, 0.10),vec3(0.34, 0.20, 0.32),vec3(0.16, 0.63, 0.05),vec3(0.17, 0.10, 0.06),vec3(0.12, 0.46, 0.12),vec3(0.73, 0.56, 0.13),vec3(0.10, 0.06, 0.05),vec3(0.12, 0.33, 0.20),vec3(0.55, 0.37, 0.09),vec3(0.14, 0.66, 0.58),vec3(0.26, 0.26, 0.11),vec3(0.12, 0.13, 0.08),vec3(0.55, 0.44, 0.18),vec3(0.27, 0.73, 0.22),vec3(0.48, 0.48, 0.05),vec3(0.10, 0.05, 0.07),vec3(0.61, -0.14, 0.25),vec3(0.53, 0.40, 0.10),vec3(0.09, 0.04, 0.04),vec3(0.65, 0.60, 0.02),vec3(0.22, 0.69, 0.57),vec3(0.44, 0.14, 0.01),vec3(0.32, 0.07, 0.05),vec3(0.14, 0.20, 0.09),vec3(0.33, 0.17, 0.11),vec3(0.22, 0.09, 0.63),vec3(0.21, 0.22, 0.08),vec3(0.34, 0.29, 0.12),vec3(0.27, 0.00, 0.71),vec3(0.52, 0.44, 0.18),vec3(0.21, 0.18, 0.08),vec3(0.36, 0.28, 0.09),vec3(0.26, 0.30, 0.18),vec3(0.07, 0.36, 0.17),vec3(0.27, 0.15, 0.07),vec3(0.05, 0.03, 0.03),vec3(0.35, 0.68, 0.06),vec3(0.69, 0.50, 0.13),vec3(0.39, 0.17, 0.01),vec3(0.44, 0.27, -0.00),vec3(0.46, 0.33, 0.10),vec3(0.37, 0.32, 0.15),vec3(0.28, 0.19, 0.29),vec3(0.00, 0.01, 0.01),vec3(-0.15, 0.22, 0.61),vec3(0.46, 0.38, 0.13),vec3(0.07, 0.58, -0.07),vec3(0.35, 0.24, 0.09),vec3(0.30, 0.23, 0.10),vec3(0.42, 0.37, 0.18),vec3(0.59, 0.46, 0.07),vec3(0.63, 0.63, 0.07),vec3(-0.12, -0.16, 0.41),vec3(0.52, 0.43, 0.09),vec3(0.38, 0.34, 0.30),vec3(0.26, 0.15, 0.09),vec3(0.20, 0.12, 0.08),vec3(0.55, 0.46, 0.18),vec3(0.54, 0.33, 0.10),vec3(0.87, 0.57, 0.14),vec3(0.38, 0.42, 0.53),vec3(0.83, 0.41, 0.09),vec3(0.15, 0.15, 0.05),vec3(0.20, 0.11, 0.09),vec3(0.26, 0.21, 0.12),vec3(0.38, 0.09, 0.02),vec3(0.25, 0.59, 0.40),vec3(0.33, 0.20, 0.08),vec3(0.48, 0.20, 0.57),vec3(0.19, 0.33, 0.05),vec3(0.39, 0.22, 0.04),vec3(0.33, 0.30, 0.14),vec3(0.25, 0.15, 0.08),vec3(0.59, 0.67, 0.28),vec3(0.53, 0.29, 0.08),vec3(0.54, 0.31, 0.08),vec3(0.16, 0.17, 0.07),vec3(0.24, 0.34, 0.09),vec3(0.42, 0.39, 0.03),vec3(0.34, 0.43, 0.34),vec3(0.15, 0.50, 0.58),vec3(0.33, 0.24, 0.05),vec3(0.20, 0.07, 0.71),vec3(0.11, 0.06, 0.03),vec3(0.48, 0.38, 0.09),vec3(0.30, 0.11, 0.22),vec3(0.37, 0.30, 0.06),vec3(0.46, 0.43, 0.19),vec3(0.06, 0.04, 0.04),vec3(0.51, 0.27, 0.09),vec3(0.44, 0.34, 0.14),vec3(0.08, 0.04, 0.04),vec3(0.50, 0.06, 0.37),vec3(0.19, 0.12, 0.14),vec3(0.04, 0.02, 0.02),vec3(0.32, 0.26, 0.09),vec3(0.53, 0.46, 0.14),vec3(0.28, 0.10, 0.15),vec3(0.15, 0.14, 0.05),vec3(0.70, 0.31, 0.59),vec3(0.10, 0.10, 0.08),vec3(0.25, 0.22, 0.12),vec3(0.24, 0.21, 0.09),vec3(0.58, 0.64, 0.63),vec3(0.92, 0.49, 0.11),vec3(0.38, 0.01, 0.59),vec3(0.51, 0.36, 0.08),vec3(0.26, -0.02, -0.07),vec3(0.28, 0.18, 0.52),vec3(0.19, 0.65, 0.29),vec3(0.35, 0.31, 0.14),vec3(0.20, 0.38, 0.17),vec3(0.47, 0.38, 0.10),vec3(0.73, 0.49, 0.16),vec3(0.67, 0.55, 0.22),vec3(0.58, 0.07, 0.08),vec3(0.38, 0.40, 0.16),vec3(0.22, 0.08, 0.05),vec3(0.12, 0.26, 0.31),vec3(0.06, 0.02, 0.03),vec3(0.27, 0.48, 0.07),vec3(0.51, 0.32, 0.04),vec3(0.31, 0.11, 0.02),vec3(0.35, 0.01, 0.64),vec3(0.22, 0.11, 0.09),vec3(0.37, 0.30, 0.08),vec3(0.28, 0.24, 0.12),vec3(0.36, 0.30, 0.13),vec3(0.16, -0.02, 0.51),vec3(0.09, 0.21, 0.32),vec3(0.36, 0.30, 0.09),vec3(0.46, 0.23, 0.04),vec3(0.06, 0.03, 0.03),vec3(0.24, 0.19, 0.11),vec3(0.05, 0.61, 0.41),vec3(0.32, 0.30, 0.11),vec3(0.41, 0.23, 0.48),vec3(0.79, 0.65, 0.16),vec3(0.36, 0.54, -0.01),vec3(0.03, 0.02, 0.02),vec3(0.25, 0.11, 0.47),vec3(0.05, 0.02, 0.01),vec3(0.66, 0.40, 0.03),vec3(-0.09, 0.11, 0.63),vec3(0.41, 0.33, 0.12),vec3(0.49, 0.43, 0.20));

// Number of Gaussians
// Number of Gaussians
const int NUM_GAUSSIANS = 200;
// Dimensions [x_min, x_max, y_min, y_max]
float dim[4] = float[4](-5.0,5.0,-5.0,5.0);
// Centers (x, y coordinates)
vec2 gauss_centers[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(-4.52, -2.59),vec2(-1.43, -4.30),vec2(-0.19, 2.07),vec2(4.90, 4.71),vec2(-3.89, -0.77),vec2(-4.32, -3.73),vec2(4.86, 0.71),vec2(2.69, 2.13),vec2(-4.76, -1.33),vec2(2.82, -4.38),vec2(-3.27, 1.55),vec2(-1.40, 3.50),vec2(-0.32, -0.84),vec2(0.07, -4.64),vec2(-4.18, 2.02),vec2(-1.64, 4.93),vec2(2.48, -2.06),vec2(-4.94, -0.03),vec2(-0.39, 3.04),vec2(-3.74, -5.06),vec2(-4.82, 1.31),vec2(-4.97, 1.76),vec2(-2.68, 1.10),vec2(2.95, -1.55),vec2(-4.92, -4.76),vec2(-2.08, -3.82),vec2(-0.08, -3.70),vec2(2.02, 0.95),vec2(-0.96, 4.25),vec2(2.36, 2.25),vec2(-3.34, -0.81),vec2(4.04, -4.19),vec2(3.81, -5.16),vec2(-3.95, 1.69),vec2(0.15, 0.08),vec2(4.94, 3.30),vec2(-1.04, -1.22),vec2(4.63, 0.50),vec2(1.70, 0.95),vec2(-2.67, 1.54),vec2(-4.14, -1.66),vec2(-3.78, 3.31),vec2(3.24, -0.58),vec2(2.34, -3.01),vec2(-3.39, 0.17),vec2(-4.72, -2.17),vec2(4.53, -1.99),vec2(-4.29, 1.36),vec2(-3.77, 0.39),vec2(-1.71, 1.90),vec2(-3.08, 0.08),vec2(1.27, -0.96),vec2(-2.29, 0.75),vec2(2.33, -0.66),vec2(-1.60, 1.04),vec2(-1.65, 2.49),vec2(-2.21, 3.15),vec2(-3.07, -3.53),vec2(-3.85, -2.19),vec2(-3.02, 3.01),vec2(1.17, 4.22),vec2(4.93, 1.45),vec2(-0.39, 3.05),vec2(2.71, -5.13),vec2(3.88, 1.52),vec2(4.14, 4.29),vec2(-5.11, -3.40),vec2(-2.41, -3.14),vec2(0.54, -2.65),vec2(-2.74, 3.08),vec2(-5.22, -2.13),vec2(4.33, -3.69),vec2(-1.03, 5.07),vec2(-1.50, -1.43),vec2(1.78, -4.85),vec2(-4.91, 2.49),vec2(-4.81, 3.20),vec2(-3.77, -3.91),vec2(-3.33, 3.01),vec2(5.04, 3.25),vec2(1.28, -0.95),vec2(-0.31, -4.10),vec2(-0.38, 1.22),vec2(1.94, 2.31),vec2(-4.51, 0.61),vec2(-2.70, 4.53),vec2(3.92, 2.61),vec2(-4.67, -1.04),vec2(-1.12, 0.86),vec2(3.46, -4.09),vec2(-5.14, -1.33),vec2(5.10, -0.52),vec2(-4.85, 2.10),vec2(4.76, -0.23),vec2(-0.57, -3.28),vec2(0.97, -3.90),vec2(0.42, 5.15),vec2(-2.44, -2.12),vec2(0.76, -3.32),vec2(0.55, 0.93),vec2(1.69, 0.89),vec2(2.13, 1.34),vec2(-2.89, -4.58),vec2(0.41, -0.55),vec2(-2.66, -0.29),vec2(3.16, -3.51),vec2(-4.83, 1.35),vec2(1.03, -3.96),vec2(3.16, -3.50),vec2(3.71, 4.35),vec2(-4.87, -0.88),vec2(-2.87, 2.34),vec2(4.23, 3.51),vec2(-2.33, -5.14),vec2(-0.61, 5.00),vec2(-3.88, -1.19),vec2(2.51, 0.40),vec2(-1.58, 0.62),vec2(-5.00, 4.64),vec2(-0.91, 2.41),vec2(0.42, 3.68),vec2(4.44, -1.21),vec2(-2.41, -1.50),vec2(-1.27, -4.88),vec2(3.43, 3.46),vec2(-1.45, -2.43),vec2(3.56, 0.71),vec2(-2.13, 2.07),vec2(1.95, 3.04),vec2(2.21, -0.24),vec2(1.80, 0.59),vec2(1.47, 3.10),vec2(-3.43, -2.65),vec2(4.34, -0.21),vec2(-2.75, 3.16),vec2(-3.25, 3.92),vec2(-4.81, -1.76),vec2(2.11, -4.00),vec2(5.13, -3.95),vec2(1.31, 1.13),vec2(-0.07, 1.00),vec2(-3.82, 4.92),vec2(2.23, 5.07),vec2(-2.33, 0.68),vec2(-0.80, 0.38),vec2(0.09, 4.19),vec2(2.21, -2.62),vec2(0.93, 0.20),vec2(-4.68, -0.49),vec2(-3.98, 2.61),vec2(0.32, -1.92),vec2(-4.66, 3.22),vec2(1.01, 3.43),vec2(2.88, 0.36),vec2(3.40, 0.79),vec2(-1.77, 3.28),vec2(-0.86, 3.27),vec2(2.24, -1.12),vec2(2.08, 3.97),vec2(1.02, 4.98),vec2(3.29, 2.25),vec2(-5.20, 0.82),vec2(1.21, 2.15),vec2(-3.91, -1.83),vec2(4.60, -4.84),vec2(2.75, 3.47),vec2(0.51, 1.54),vec2(3.24, 1.79),vec2(2.65, 0.72),vec2(3.08, 4.60),vec2(0.86, -4.93),vec2(-1.41, -1.10),vec2(1.55, -3.01),vec2(4.28, 0.91),vec2(2.66, -0.81),vec2(3.29, -2.65),vec2(-2.15, -4.82),vec2(4.50, 2.02),vec2(-2.61, -1.25),vec2(-0.05, -1.16),vec2(3.40, 3.28),vec2(-1.51, 0.00),vec2(4.41, -0.64),vec2(1.49, -1.98),vec2(1.41, 0.17),vec2(-0.10, 4.87),vec2(-0.42, -2.71),vec2(2.88, 2.47),vec2(-0.54, -5.04),vec2(-1.98, 3.91),vec2(4.45, -2.99),vec2(2.05, -0.79),vec2(-1.78, -0.40),vec2(4.76, 2.49),vec2(-1.41, -3.39),vec2(3.90, 0.27),vec2(1.01, 2.53),vec2(3.62, -4.62),vec2(-0.86, -1.47),vec2(-2.56, 5.14));
// Sigmas (scales)
vec2 gauss_sigmas[NUM_GAUSSIANS] = vec2[NUM_GAUSSIANS](vec2(0.54, 0.57),vec2(0.47, 0.46),vec2(0.53, 0.18),vec2(0.54, 0.79),vec2(0.51, 0.44),vec2(0.51, 0.59),vec2(0.67, 0.57),vec2(0.37, 0.16),vec2(0.32, 0.23),vec2(0.43, 0.49),vec2(0.33, 0.37),vec2(0.10, 0.50),vec2(0.00, 0.13),vec2(0.39, 0.46),vec2(0.25, 0.32),vec2(0.50, 0.54),vec2(0.15, 0.16),vec2(0.22, 0.36),vec2(0.18, 0.37),vec2(0.55, 0.52),vec2(0.47, 0.28),vec2(0.38, 0.22),vec2(0.56, 0.13),vec2(0.32, 0.41),vec2(0.57, 0.69),vec2(0.47, 0.40),vec2(0.46, 0.40),vec2(0.16, 0.20),vec2(0.49, 0.34),vec2(0.53, 0.66),vec2(0.06, 0.35),vec2(0.46, 0.38),vec2(0.54, 0.29),vec2(0.44, 0.34),vec2(0.47, 0.26),vec2(0.62, 0.59),vec2(0.15, 0.49),vec2(0.47, 0.38),vec2(0.20, 0.12),vec2(0.21, 0.16),vec2(0.23, 0.45),vec2(0.42, 0.60),vec2(0.31, 0.46),vec2(0.42, 0.54),vec2(0.35, 0.22),vec2(0.36, 0.42),vec2(0.76, 0.49),vec2(0.17, 0.43),vec2(0.45, 0.38),vec2(0.18, 0.34),vec2(0.36, 0.05),vec2(0.46, 0.37),vec2(0.21, 0.26),vec2(0.24, 0.18),vec2(0.34, 0.25),vec2(0.23, 0.07),vec2(0.26, 0.42),vec2(0.43, 0.55),vec2(0.55, 0.55),vec2(0.10, 0.39),vec2(0.49, 0.52),vec2(0.65, 0.48),vec2(0.50, 0.60),vec2(0.71, 0.34),vec2(0.42, 0.43),vec2(0.45, 0.77),vec2(0.51, 0.62),vec2(0.15, 0.54),vec2(0.49, 0.47),vec2(0.28, 0.46),vec2(0.21, 0.57),vec2(0.57, 0.37),vec2(0.47, 0.40),vec2(0.19, 0.56),vec2(0.49, 0.57),vec2(0.47, 0.35),vec2(0.65, 0.65),vec2(0.48, 0.58),vec2(0.07, 0.32),vec2(0.46, 0.63),vec2(0.54, 0.45),vec2(0.17, 0.38),vec2(0.10, 0.56),vec2(0.58, 0.32),vec2(0.53, 0.36),vec2(0.57, 0.48),vec2(0.40, 0.47),vec2(0.37, 0.53),vec2(0.42, 0.10),vec2(0.36, 0.40),vec2(0.16, 0.31),vec2(0.21, 0.78),vec2(0.41, 0.24),vec2(0.17, 0.39),vec2(0.12, 0.37),vec2(0.56, 0.47),vec2(0.29, 0.43),vec2(0.27, 0.42),vec2(0.42, 0.32),vec2(0.28, 0.13),vec2(0.13, 0.29),vec2(0.32, 0.20),vec2(0.48, 0.63),vec2(-0.01, -0.03),vec2(0.07, 0.24),vec2(0.55, 0.37),vec2(0.45, 0.31),vec2(0.60, 0.39),vec2(0.53, 0.38),vec2(0.41, 0.77),vec2(0.36, 0.21),vec2(0.38, 0.09),vec2(0.36, 0.53),vec2(0.56, 0.38),vec2(0.40, 0.24),vec2(0.48, 0.14),vec2(0.28, 0.08),vec2(0.18, 0.16),vec2(0.60, 0.78),vec2(0.22, 0.13),vec2(0.26, 0.63),vec2(0.60, 0.37),vec2(0.09, 0.07),vec2(0.41, 0.62),vec2(0.46, 0.54),vec2(0.27, 0.54),vec2(0.50, 0.34),vec2(0.16, 0.22),vec2(0.52, 0.40),vec2(0.38, 0.28),vec2(0.20, 0.07),vec2(0.65, 0.52),vec2(0.58, 0.44),vec2(0.27, 0.19),vec2(0.27, 0.41),vec2(0.63, 0.45),vec2(0.29, 0.28),vec2(0.53, 0.53),vec2(0.36, 0.85),vec2(0.13, 0.31),vec2(0.34, 0.12),vec2(0.60, 0.63),vec2(0.69, 0.48),vec2(0.27, 0.29),vec2(0.30, 0.59),vec2(0.59, 0.31),vec2(0.16, 0.23),vec2(0.13, 0.40),vec2(0.65, 0.22),vec2(0.37, 0.27),vec2(0.70, 0.56),vec2(0.63, 0.63),vec2(0.46, 0.52),vec2(0.44, 0.25),vec2(0.39, 0.34),vec2(0.24, 0.51),vec2(0.45, 0.64),vec2(0.25, 0.12),vec2(0.44, 0.53),vec2(0.65, 0.37),vec2(0.34, 0.53),vec2(0.32, 0.30),vec2(0.48, 0.58),vec2(0.06, 0.19),vec2(0.47, 0.61),vec2(0.36, 0.60),vec2(0.57, 0.30),vec2(0.29, 0.11),vec2(0.01, 0.11),vec2(0.44, 0.71),vec2(0.46, 0.51),vec2(0.38, 0.65),vec2(0.40, 0.46),vec2(0.00, 0.02),vec2(0.18, 0.42),vec2(0.67, 0.41),vec2(0.47, 0.56),vec2(0.64, 0.30),vec2(0.04, 0.10),vec2(0.49, 0.18),vec2(0.39, 0.53),vec2(0.33, 0.15),vec2(0.38, 0.40),vec2(-0.01, 0.11),vec2(0.44, 0.32),vec2(0.24, 0.45),vec2(0.51, 0.53),vec2(0.46, 0.57),vec2(0.53, 0.18),vec2(0.53, 0.47),vec2(0.70, 0.49),vec2(0.09, 0.05),vec2(0.11, 0.04),vec2(0.50, 0.40),vec2(0.19, 0.35),vec2(0.44, 0.07),vec2(0.44, 0.38),vec2(0.44, 0.25),vec2(0.08, 0.66),vec2(0.65, 0.42));
// Rotation angles (thetas)
float gauss_thetas[NUM_GAUSSIANS] = float[NUM_GAUSSIANS](-0.29,-0.17,0.26,0.63,0.42,-0.08,-0.16,-0.09,-0.52,-0.34,0.19,-0.49,0.19,-0.20,-0.68,0.11,-0.49,-0.46,0.17,-0.02,-0.42,-0.17,-0.08,0.24,0.37,-0.02,-0.36,0.83,-0.03,-0.59,-0.12,0.04,-0.10,0.02,-1.04,-0.38,0.01,-0.26,-0.59,-0.17,0.06,0.49,0.10,-0.32,0.70,-0.40,-0.18,0.54,-0.57,-0.47,0.52,0.85,-0.28,0.07,0.50,-0.20,0.32,0.09,0.37,0.36,-0.41,0.36,-0.20,0.10,0.16,0.15,-0.50,0.90,-0.47,0.41,0.10,-0.42,-0.24,0.06,-0.08,-0.00,0.25,0.15,0.14,0.19,0.77,0.44,-0.16,0.23,0.27,-0.52,-0.02,0.32,0.11,-0.28,-0.03,-0.03,0.22,-0.07,0.16,-0.03,-0.04,0.51,0.20,0.43,0.48,-0.43,-0.29,-0.02,0.09,0.29,-0.43,0.16,0.28,-0.21,-0.52,-0.12,0.01,0.36,0.66,-0.55,0.55,0.61,-0.21,-0.45,0.27,-0.41,-0.06,-0.22,0.02,0.23,-0.06,0.81,0.08,-0.21,0.18,-0.03,0.50,0.71,0.57,-0.12,-0.23,0.08,-0.00,-0.50,-0.22,0.51,0.27,-0.55,0.16,0.04,-0.44,0.64,0.04,-1.02,-0.02,0.49,-0.62,-0.30,0.20,-0.48,-0.58,-0.22,-0.18,0.67,0.47,0.03,0.72,-0.23,0.64,-0.12,-0.53,-0.53,0.03,-0.48,-0.04,0.72,-0.11,-0.41,-0.14,0.59,-0.01,-0.06,-0.49,0.11,0.02,-0.29,0.27,0.35,0.29,-0.10,0.17,0.52,0.04,0.06,0.10,0.02,-0.25,-0.09,-0.17,0.12,-0.12,-0.04,-0.11,-0.12);
// Colors (RGB)
vec3 gauss_colors[NUM_GAUSSIANS] = vec3[NUM_GAUSSIANS](vec3(0.39, 0.40, 0.38),vec3(0.35, 0.35, 0.36),vec3(0.56, 0.33, 0.35),vec3(0.80, 0.80, 0.81),vec3(0.73, 0.76, 0.76),vec3(0.32, 0.32, 0.32),vec3(0.27, 0.20, 0.18),vec3(0.24, 0.33, 0.30),vec3(0.39, 0.53, 0.53),vec3(0.53, 0.52, 0.53),vec3(0.72, 0.47, 0.54),vec3(0.18, 0.38, 0.32),vec3(0.47, 0.70, 0.10),vec3(0.58, 0.58, 0.57),vec3(0.52, 0.69, 0.60),vec3(0.50, 0.48, 0.49),vec3(0.24, 0.46, 0.34),vec3(0.71, 0.72, 0.75),vec3(0.27, 0.87, 0.58),vec3(0.58, 0.58, 0.58),vec3(0.67, 0.47, 0.52),vec3(0.40, 0.38, 0.38),vec3(0.42, 0.45, 0.48),vec3(0.65, 0.66, 0.68),vec3(0.77, 0.77, 0.77),vec3(0.58, 0.56, 0.56),vec3(0.59, 0.58, 0.59),vec3(0.49, 0.21, 0.41),vec3(0.43, 0.47, 0.46),vec3(0.45, -0.09, 0.17),vec3(0.52, 0.51, 0.52),vec3(0.36, 0.36, 0.36),vec3(0.53, 0.52, 0.53),vec3(0.20, -0.15, 0.01),vec3(0.57, 0.13, 0.13),vec3(0.36, 0.27, 0.10),vec3(0.41, 0.32, 0.34),vec3(0.40, 0.45, 0.48),vec3(0.04, 0.38, -0.07),vec3(0.79, 0.83, 0.84),vec3(0.44, 0.51, 0.49),vec3(0.39, 0.33, 0.36),vec3(0.40, 0.44, 0.50),vec3(0.47, 0.46, 0.47),vec3(0.46, 0.48, 0.47),vec3(0.33, 0.34, 0.34),vec3(0.66, 0.66, 0.66),vec3(0.30, 0.42, 0.36),vec3(0.61, 0.49, 0.55),vec3(0.61, 0.59, 0.66),vec3(0.20, 0.38, 0.39),vec3(0.20, 0.55, 0.31),vec3(0.04, 0.57, 0.12),vec3(0.50, 0.55, 0.51),vec3(0.44, 0.05, 0.06),vec3(0.71, 0.44, 0.41),vec3(0.46, 0.43, 0.45),vec3(0.48, 0.48, 0.49),vec3(0.19, 0.15, 0.19),vec3(0.29, 0.28, 0.30),vec3(0.50, 0.50, 0.51),vec3(0.68, 0.70, 0.71),vec3(0.52, 0.06, 0.28),vec3(0.50, 0.50, 0.49),vec3(0.50, 0.52, 0.52),vec3(0.25, 0.25, 0.21),vec3(0.53, 0.52, 0.53),vec3(0.57, 0.60, 0.61),vec3(0.42, 0.41, 0.39),vec3(0.58, 0.05, 0.34),vec3(0.43, 0.41, 0.43),vec3(0.37, 0.37, 0.37),vec3(0.36, 0.37, 0.36),vec3(0.51, 0.46, 0.44),vec3(0.55, 0.54, 0.56),vec3(0.42, 0.44, 0.42),vec3(0.65, 0.35, 0.59),vec3(0.48, 0.48, 0.48),vec3(0.44, 0.52, 0.55),vec3(0.33, 0.43, 0.59),vec3(0.43, 0.16, 0.40),vec3(0.30, 0.30, 0.30),vec3(0.44, 0.57, 0.58),vec3(0.22, 0.68, 0.47),vec3(0.59, 0.61, 0.60),vec3(0.39, 0.38, 0.38),vec3(0.47, 0.48, 0.48),vec3(0.12, -0.09, -0.10),vec3(0.33, 0.35, 0.36),vec3(0.35, 0.35, 0.35),vec3(0.53, 0.42, 0.40),vec3(0.63, 0.63, 0.63),vec3(0.33, 0.33, 0.33),vec3(0.29, 0.29, 0.29),vec3(0.45, 0.42, 0.44),vec3(0.40, 0.51, 0.22),vec3(0.57, 0.56, 0.56),vec3(0.64, 0.66, 0.70),vec3(0.35, 0.31, 0.41),vec3(0.51, 0.42, 0.42),vec3(0.53, 0.03, 0.51),vec3(0.33, 0.23, 0.16),vec3(0.49, 0.48, 0.48),vec3(0.30, 0.06, 0.68),vec3(0.59, 0.61, 0.64),vec3(0.26, 0.12, 0.51),vec3(0.01, 0.24, 0.17),vec3(0.19, 0.09, 0.36),vec3(0.15, 0.29, -0.10),vec3(0.40, 0.38, 0.43),vec3(0.44, 0.61, 0.61),vec3(0.69, 0.53, 0.59),vec3(0.26, 0.27, 0.37),vec3(0.31, 0.28, 0.29),vec3(0.47, 0.46, 0.46),vec3(0.08, 0.10, 0.11),vec3(0.36, 0.22, 0.27),vec3(0.53, 0.58, 0.56),vec3(0.72, 0.73, 0.72),vec3(0.69, 0.87, 0.82),vec3(0.42, 0.50, 0.48),vec3(0.49, 0.48, 0.48),vec3(0.51, 0.63, 0.15),vec3(0.51, 0.49, 0.49),vec3(0.21, 0.26, 0.13),vec3(0.68, 0.70, 0.72),vec3(0.35, 0.47, 0.45),vec3(0.45, 0.52, 0.54),vec3(0.38, 0.52, 0.41),vec3(0.34, 0.40, 0.40),vec3(0.30, 0.46, 0.13),vec3(0.17, 0.11, 0.20),vec3(0.58, 0.60, 0.58),vec3(0.45, 0.46, 0.46),vec3(0.06, 0.56, 0.28),vec3(0.49, 0.51, 0.50),vec3(0.35, 0.39, 0.38),vec3(0.42, 0.43, 0.40),vec3(0.59, 0.58, 0.59),vec3(0.56, 0.24, 0.28),vec3(0.30, 0.25, 0.31),vec3(0.65, 0.64, 0.65),vec3(0.73, 0.73, 0.73),vec3(0.51, 0.03, 0.47),vec3(0.51, 0.56, 0.59),vec3(0.24, 0.22, 0.22),vec3(0.35, 0.34, 0.36),vec3(0.40, 0.33, 0.38),vec3(0.47, 0.46, 0.48),vec3(0.41, 0.39, 0.41),vec3(0.48, 0.49, 0.52),vec3(0.05, 0.35, 0.11),vec3(0.47, 0.50, 0.44),vec3(0.66, 0.70, 0.68),vec3(0.48, 0.32, 0.34),vec3(0.44, 0.51, 0.49),vec3(0.51, 0.09, 0.19),vec3(0.55, 0.44, 0.60),vec3(0.57, 0.57, 0.56),vec3(0.47, 0.47, 0.46),vec3(0.43, 0.32, 0.37),vec3(0.60, 0.55, 0.57),vec3(0.46, 0.03, 0.16),vec3(0.16, 0.46, 0.26),vec3(0.64, 0.64, 0.64),vec3(0.32, 0.32, 0.34),vec3(0.47, 0.39, 0.44),vec3(0.36, 0.37, 0.36),vec3(0.68, -0.05, 0.15),vec3(0.53, 0.53, 0.52),vec3(0.67, 0.66, 0.68),vec3(0.51, 0.57, 0.59),vec3(0.59, 0.59, 0.59),vec3(0.24, 0.67, 0.24),vec3(0.38, 0.33, 0.34),vec3(0.61, 0.61, 0.61),vec3(0.41, 0.43, 0.42),vec3(0.26, 0.25, 0.25),vec3(0.47, 0.57, 0.56),vec3(0.29, 0.34, 0.35),vec3(0.29, 0.25, 0.35),vec3(0.39, 0.41, 0.45),vec3(0.61, 0.61, 0.61),vec3(0.17, 0.59, 0.47),vec3(0.28, 0.37, 0.39),vec3(0.56, 0.57, 0.57),vec3(0.43, 0.45, 0.46),vec3(0.07, 0.37, 0.21),vec3(0.61, 0.60, 0.61),vec3(0.55, 0.55, 0.55),vec3(0.67, 0.66, 0.66),vec3(0.60, 0.16, 0.59),vec3(0.71, 0.24, 0.43),vec3(0.44, 0.44, 0.45),vec3(0.54, 0.53, 0.53),vec3(0.51, 0.45, 0.45),vec3(0.26, 0.54, 0.43),vec3(0.26, 0.26, 0.26),vec3(0.43, 0.44, 0.42),vec3(0.46, 0.48, 0.48));



//======================================================= Copy-Paste Area End =========================================================

/////////////////////////////////////////////////////
//// Here, you are asked to build the inverse covariance matrix, similar to in the 2DGS_A3_solution.ipynb file.
//// You must create the rotation matrix R, the inverse squared sigma matrix D, and the final inverse covariance matrix. 
/////////////////////////////////////////////////////

// This function builds the inverse covariance matrix
mat2 buildSigmaInv(float theta, vec2 sigma)
{
    mat2 cov_mat = mat2(0, 0, 0, 0);

    /////////// 
    // BEGINNING OF YOUR CODE.
    //////////
    float sigmaX = sigma.x + 2e-5;
    float sigmaY = sigma.y + 2e-5;
    mat2 pos1 = mat2(cos(theta), -sin(theta), sin(theta), cos(theta));
    mat2 pos2 = mat2(cos(theta), sin(theta), -sin(theta), cos(theta));
    mat2 S = mat2(1.0 / (sigma.x * sigma.x + 1e-5), 0, 0, 1.0 / (sigma.y * sigma.y + 1e-5));
    
    cov_mat = pos2 * S * pos1;
    
    /////////// 
    // END OF YOUR CODE.
    //////////
    return cov_mat;
}

/////////////////////////////////////////////////////
//// Here, you are asked to fill in the necessary components for calculating each gaussian's contribution to the current pixel's color.
//// You must calculate the position of the pixel relative to the gaussian's center, calculate the contribution exponent (pos^T * sigma_inv * pos) 
//// and finally calculate the Gaussian function value that will control the contribution of this specific gaussian.
/////////////////////////////////////////////////////

void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    float aspect = (dim[1] - dim[0]) / (dim[3] - dim[2]) * iResolution.y / iResolution.x;
    vec2 uv = fragCoord.xy / iResolution.xy; // scale to [0, 1]
    // scale from [-1, 1] to [x_min, x_max] and [y_min, y_max]
    uv.x = mix(dim[0], dim[1], uv.x);
    uv.y = mix(dim[2], dim[3], uv.y);
    if (aspect > 1.0) {
        uv.y *= aspect;
    } else {
        uv.x /= aspect;
    }

    vec3 color = vec3(0.0);

    // Draw bounding box
    float edge = 0.01;
    if (uv.x > dim[0] - edge && uv.x < dim[0] + edge ||
        uv.x > dim[1] - edge && uv.x < dim[1] + edge ||
        ((uv.y > dim[2] - edge && uv.y < dim[2] + edge || uv.y > dim[3] - edge && uv.y < dim[3] + edge) && uv.x > dim[0] && uv.x < dim[1])) {
        color = vec3(1.0, 1.0, 1.0);
    }

    // Animate the Gaussian centers
    uv += smoothstep(0.0, 1.0, cos(iTime)) * cos(iTime + 100.0 * uv.xy) * 3.;

    for (int i = 0; i < NUM_GAUSSIANS; ++i) {
        vec2 center = gauss_centers[i];
        vec2 scale = gauss_sigmas[i];
        float theta = gauss_thetas[i];
        vec3 color_rgb = gauss_colors[i];
        
        // Build inverse covariance matrix
        mat2 sigma_inv = buildSigmaInv(theta, scale);
        float f_x = 0.;

        /////////// 
        // BEGINNING OF YOUR CODE.
        //////////
        vec2 pos = uv - center;
        vec2 temp = sigma_inv * pos;
        float exponent = dot(temp, pos);
        f_x = exp(-0.5 * exponent);

        /////////// 
        // END OF YOUR CODE.
        //////////
        
        // Add color contribution
        color += f_x * color_rgb;
    }

    fragColor = vec4(color, 1.0);
}


void main() {
    mainImage(gl_FragColor, gl_FragCoord.xy);
}